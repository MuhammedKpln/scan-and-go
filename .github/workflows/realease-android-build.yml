# This action will be executed when a tag is created and uploaded.
# More information: https://github.com/davidcopano/github-actions-docs

name: Generate Android APK and publish release on Github

on:
  push:
    branches:
      - main

jobs:
  prepare_tools:
    name: Prepare tools to generate the APK
    runs-on: ubuntu-latest
    steps:
      - name: Get code from the current repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
          cache: "gradle"

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          cache: yarn
      - name: Install apksigner
        run: sudo apt-get install -y apksigner

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: yarn

      - name: Build Ionic assets
        run: yarn build

      - name: Capacitor sync
        run: npx cap sync

      - name: Decode Keystore File
        id: android_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: release-scango.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_FILE }}

      - name: Decode Firebase Google services
        uses: timheuer/base64-to-file@v1
        id: firebase_google_services
        with:
          fileName: google-services.json
          fileDir: ./android/app
          encodedString: ${{ secrets.FIREBASE_GOOGLE_SERVICES }}

      - name: Build Android
        id: android_build
        run: npx cap build android --keystorepath ${{ steps.android_keystore.outputs.filePath }} --keystorepass ${{ secrets.KEYSTORE_KEY_PASSWORD }} --keystorealias ${{ secrets.KEYSTORE_KEY_ALIAS }} --keystorealiaspass ${{ secrets.KEYSTORE_KEY_PASSWORD }} --androidreleasetype APK --signing-type apksigner
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_PATH: ${{ steps.android_keystore.outputs.filePath }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}

      - name: Upload generated and signed APK as artifact to Github
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release-*.apk
